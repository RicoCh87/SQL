# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL.



CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )


#sql this query is revealing the top 5 artist who have a popularity rating greater than or equal to 92!
SELECT artist_name, popularity
FROM Spotifydata
WHERE 'popularity' >= 92
Limit 5;

#Sql this query will give us the names of the artists that starts with "B"
SELECT track_name, artist_name
FROM Spotifydata
WHERE Artist_name like "B%";

#Sql the query will give us the name of the top 10 tracks whose tempo is higher or equal to 145.000!
SELECT track_name, tempo
FROM Spotifydata
WHERE tempo >= 145.000
Limit 10;


Sql this query determined the avg popularity, danceability, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM spotifydata
GROUP BY artist_name, track_name;
